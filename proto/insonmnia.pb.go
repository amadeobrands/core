// Code generated by protoc-gen-go. DO NOT EDIT.
// source: insonmnia.proto

package sonm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TaskStatusReply_Status int32

const (
	TaskStatusReply_UNKNOWN  TaskStatusReply_Status = 0
	TaskStatusReply_SPOOLING TaskStatusReply_Status = 1
	TaskStatusReply_SPAWNING TaskStatusReply_Status = 2
	TaskStatusReply_RUNNING  TaskStatusReply_Status = 3
	TaskStatusReply_FINISHED TaskStatusReply_Status = 4
	TaskStatusReply_BROKEN   TaskStatusReply_Status = 5
)

var TaskStatusReply_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "SPOOLING",
	2: "SPAWNING",
	3: "RUNNING",
	4: "FINISHED",
	5: "BROKEN",
}
var TaskStatusReply_Status_value = map[string]int32{
	"UNKNOWN":  0,
	"SPOOLING": 1,
	"SPAWNING": 2,
	"RUNNING":  3,
	"FINISHED": 4,
	"BROKEN":   5,
}

func (x TaskStatusReply_Status) String() string {
	return proto.EnumName(TaskStatusReply_Status_name, int32(x))
}
func (TaskStatusReply_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{10, 0} }

type TaskLogsRequest_Type int32

const (
	TaskLogsRequest_STDOUT TaskLogsRequest_Type = 0
	TaskLogsRequest_STDERR TaskLogsRequest_Type = 1
	TaskLogsRequest_BOTH   TaskLogsRequest_Type = 2
)

var TaskLogsRequest_Type_name = map[int32]string{
	0: "STDOUT",
	1: "STDERR",
	2: "BOTH",
}
var TaskLogsRequest_Type_value = map[string]int32{
	"STDOUT": 0,
	"STDERR": 1,
	"BOTH":   2,
}

func (x TaskLogsRequest_Type) String() string {
	return proto.EnumName(TaskLogsRequest_Type_name, int32(x))
}
func (TaskLogsRequest_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{14, 0} }

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type PingReply struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *PingReply) Reset()                    { *m = PingReply{} }
func (m *PingReply) String() string            { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()               {}
func (*PingReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *PingReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CPUUsage struct {
	Total uint64 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
}

func (m *CPUUsage) Reset()                    { *m = CPUUsage{} }
func (m *CPUUsage) String() string            { return proto.CompactTextString(m) }
func (*CPUUsage) ProtoMessage()               {}
func (*CPUUsage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CPUUsage) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type MemoryUsage struct {
	MaxUsage uint64 `protobuf:"varint,1,opt,name=maxUsage" json:"maxUsage,omitempty"`
}

func (m *MemoryUsage) Reset()                    { *m = MemoryUsage{} }
func (m *MemoryUsage) String() string            { return proto.CompactTextString(m) }
func (*MemoryUsage) ProtoMessage()               {}
func (*MemoryUsage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *MemoryUsage) GetMaxUsage() uint64 {
	if m != nil {
		return m.MaxUsage
	}
	return 0
}

type NetworkUsage struct {
	TxBytes   uint64 `protobuf:"varint,1,opt,name=txBytes" json:"txBytes,omitempty"`
	RxBytes   uint64 `protobuf:"varint,2,opt,name=rxBytes" json:"rxBytes,omitempty"`
	TxPackets uint64 `protobuf:"varint,3,opt,name=txPackets" json:"txPackets,omitempty"`
	RxPackets uint64 `protobuf:"varint,4,opt,name=rxPackets" json:"rxPackets,omitempty"`
	TxErrors  uint64 `protobuf:"varint,5,opt,name=txErrors" json:"txErrors,omitempty"`
	RxErrors  uint64 `protobuf:"varint,6,opt,name=rxErrors" json:"rxErrors,omitempty"`
	TxDropped uint64 `protobuf:"varint,7,opt,name=txDropped" json:"txDropped,omitempty"`
	RxDropped uint64 `protobuf:"varint,8,opt,name=rxDropped" json:"rxDropped,omitempty"`
}

func (m *NetworkUsage) Reset()                    { *m = NetworkUsage{} }
func (m *NetworkUsage) String() string            { return proto.CompactTextString(m) }
func (*NetworkUsage) ProtoMessage()               {}
func (*NetworkUsage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *NetworkUsage) GetTxBytes() uint64 {
	if m != nil {
		return m.TxBytes
	}
	return 0
}

func (m *NetworkUsage) GetRxBytes() uint64 {
	if m != nil {
		return m.RxBytes
	}
	return 0
}

func (m *NetworkUsage) GetTxPackets() uint64 {
	if m != nil {
		return m.TxPackets
	}
	return 0
}

func (m *NetworkUsage) GetRxPackets() uint64 {
	if m != nil {
		return m.RxPackets
	}
	return 0
}

func (m *NetworkUsage) GetTxErrors() uint64 {
	if m != nil {
		return m.TxErrors
	}
	return 0
}

func (m *NetworkUsage) GetRxErrors() uint64 {
	if m != nil {
		return m.RxErrors
	}
	return 0
}

func (m *NetworkUsage) GetTxDropped() uint64 {
	if m != nil {
		return m.TxDropped
	}
	return 0
}

func (m *NetworkUsage) GetRxDropped() uint64 {
	if m != nil {
		return m.RxDropped
	}
	return 0
}

type ResourceUsage struct {
	Cpu     *CPUUsage                `protobuf:"bytes,1,opt,name=cpu" json:"cpu,omitempty"`
	Memory  *MemoryUsage             `protobuf:"bytes,2,opt,name=memory" json:"memory,omitempty"`
	Network map[string]*NetworkUsage `protobuf:"bytes,3,rep,name=network" json:"network,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResourceUsage) Reset()                    { *m = ResourceUsage{} }
func (m *ResourceUsage) String() string            { return proto.CompactTextString(m) }
func (*ResourceUsage) ProtoMessage()               {}
func (*ResourceUsage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ResourceUsage) GetCpu() *CPUUsage {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ResourceUsage) GetMemory() *MemoryUsage {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ResourceUsage) GetNetwork() map[string]*NetworkUsage {
	if m != nil {
		return m.Network
	}
	return nil
}

type InfoReply struct {
	Usage map[string]*ResourceUsage `protobuf:"bytes,1,rep,name=usage" json:"usage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *InfoReply) Reset()                    { *m = InfoReply{} }
func (m *InfoReply) String() string            { return proto.CompactTextString(m) }
func (*InfoReply) ProtoMessage()               {}
func (*InfoReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *InfoReply) GetUsage() map[string]*ResourceUsage {
	if m != nil {
		return m.Usage
	}
	return nil
}

type StopTaskRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *StopTaskRequest) Reset()                    { *m = StopTaskRequest{} }
func (m *StopTaskRequest) String() string            { return proto.CompactTextString(m) }
func (*StopTaskRequest) ProtoMessage()               {}
func (*StopTaskRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *StopTaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopTaskReply struct {
}

func (m *StopTaskReply) Reset()                    { *m = StopTaskReply{} }
func (m *StopTaskReply) String() string            { return proto.CompactTextString(m) }
func (*StopTaskReply) ProtoMessage()               {}
func (*StopTaskReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

type TaskStatusRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *TaskStatusRequest) Reset()                    { *m = TaskStatusRequest{} }
func (m *TaskStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*TaskStatusRequest) ProtoMessage()               {}
func (*TaskStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *TaskStatusRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TaskStatusReply struct {
	Status TaskStatusReply_Status `protobuf:"varint,1,opt,name=status,enum=sonm.TaskStatusReply_Status" json:"status,omitempty"`
}

func (m *TaskStatusReply) Reset()                    { *m = TaskStatusReply{} }
func (m *TaskStatusReply) String() string            { return proto.CompactTextString(m) }
func (*TaskStatusReply) ProtoMessage()               {}
func (*TaskStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *TaskStatusReply) GetStatus() TaskStatusReply_Status {
	if m != nil {
		return m.Status
	}
	return TaskStatusReply_UNKNOWN
}

type StatusMapReply struct {
	Statuses map[string]*TaskStatusReply `protobuf:"bytes,1,rep,name=statuses" json:"statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StatusMapReply) Reset()                    { *m = StatusMapReply{} }
func (m *StatusMapReply) String() string            { return proto.CompactTextString(m) }
func (*StatusMapReply) ProtoMessage()               {}
func (*StatusMapReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *StatusMapReply) GetStatuses() map[string]*TaskStatusReply {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type ContainerResources struct {
	Memory   int64 `protobuf:"varint,1,opt,name=memory" json:"memory,omitempty"`
	NanoCPUs int64 `protobuf:"varint,2,opt,name=nanoCPUs" json:"nanoCPUs,omitempty"`
}

func (m *ContainerResources) Reset()                    { *m = ContainerResources{} }
func (m *ContainerResources) String() string            { return proto.CompactTextString(m) }
func (*ContainerResources) ProtoMessage()               {}
func (*ContainerResources) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *ContainerResources) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ContainerResources) GetNanoCPUs() int64 {
	if m != nil {
		return m.NanoCPUs
	}
	return 0
}

type ContainerRestartPolicy struct {
	Name              string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MaximumRetryCount uint32 `protobuf:"varint,2,opt,name=maximumRetryCount" json:"maximumRetryCount,omitempty"`
}

func (m *ContainerRestartPolicy) Reset()                    { *m = ContainerRestartPolicy{} }
func (m *ContainerRestartPolicy) String() string            { return proto.CompactTextString(m) }
func (*ContainerRestartPolicy) ProtoMessage()               {}
func (*ContainerRestartPolicy) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *ContainerRestartPolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerRestartPolicy) GetMaximumRetryCount() uint32 {
	if m != nil {
		return m.MaximumRetryCount
	}
	return 0
}

type TaskLogsRequest struct {
	Type          TaskLogsRequest_Type `protobuf:"varint,1,opt,name=type,enum=sonm.TaskLogsRequest_Type" json:"type,omitempty"`
	Id            string               `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Since         string               `protobuf:"bytes,3,opt,name=since" json:"since,omitempty"`
	AddTimestamps bool                 `protobuf:"varint,4,opt,name=addTimestamps" json:"addTimestamps,omitempty"`
	Follow        bool                 `protobuf:"varint,5,opt,name=Follow" json:"Follow,omitempty"`
	Tail          string               `protobuf:"bytes,6,opt,name=Tail" json:"Tail,omitempty"`
	Details       bool                 `protobuf:"varint,7,opt,name=Details" json:"Details,omitempty"`
}

func (m *TaskLogsRequest) Reset()                    { *m = TaskLogsRequest{} }
func (m *TaskLogsRequest) String() string            { return proto.CompactTextString(m) }
func (*TaskLogsRequest) ProtoMessage()               {}
func (*TaskLogsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *TaskLogsRequest) GetType() TaskLogsRequest_Type {
	if m != nil {
		return m.Type
	}
	return TaskLogsRequest_STDOUT
}

func (m *TaskLogsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskLogsRequest) GetSince() string {
	if m != nil {
		return m.Since
	}
	return ""
}

func (m *TaskLogsRequest) GetAddTimestamps() bool {
	if m != nil {
		return m.AddTimestamps
	}
	return false
}

func (m *TaskLogsRequest) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

func (m *TaskLogsRequest) GetTail() string {
	if m != nil {
		return m.Tail
	}
	return ""
}

func (m *TaskLogsRequest) GetDetails() bool {
	if m != nil {
		return m.Details
	}
	return false
}

type TaskLogsChunk struct {
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *TaskLogsChunk) Reset()                    { *m = TaskLogsChunk{} }
func (m *TaskLogsChunk) String() string            { return proto.CompactTextString(m) }
func (*TaskLogsChunk) ProtoMessage()               {}
func (*TaskLogsChunk) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *TaskLogsChunk) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "sonm.PingRequest")
	proto.RegisterType((*PingReply)(nil), "sonm.PingReply")
	proto.RegisterType((*CPUUsage)(nil), "sonm.CPUUsage")
	proto.RegisterType((*MemoryUsage)(nil), "sonm.MemoryUsage")
	proto.RegisterType((*NetworkUsage)(nil), "sonm.NetworkUsage")
	proto.RegisterType((*ResourceUsage)(nil), "sonm.ResourceUsage")
	proto.RegisterType((*InfoReply)(nil), "sonm.InfoReply")
	proto.RegisterType((*StopTaskRequest)(nil), "sonm.StopTaskRequest")
	proto.RegisterType((*StopTaskReply)(nil), "sonm.StopTaskReply")
	proto.RegisterType((*TaskStatusRequest)(nil), "sonm.TaskStatusRequest")
	proto.RegisterType((*TaskStatusReply)(nil), "sonm.TaskStatusReply")
	proto.RegisterType((*StatusMapReply)(nil), "sonm.StatusMapReply")
	proto.RegisterType((*ContainerResources)(nil), "sonm.ContainerResources")
	proto.RegisterType((*ContainerRestartPolicy)(nil), "sonm.ContainerRestartPolicy")
	proto.RegisterType((*TaskLogsRequest)(nil), "sonm.TaskLogsRequest")
	proto.RegisterType((*TaskLogsChunk)(nil), "sonm.TaskLogsChunk")
	proto.RegisterEnum("sonm.TaskStatusReply_Status", TaskStatusReply_Status_name, TaskStatusReply_Status_value)
	proto.RegisterEnum("sonm.TaskLogsRequest_Type", TaskLogsRequest_Type_name, TaskLogsRequest_Type_value)
}

func init() { proto.RegisterFile("insonmnia.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 804 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0x5d, 0xaf, 0xe2, 0x44,
	0x18, 0xde, 0xd2, 0x02, 0xe5, 0x65, 0x81, 0x9e, 0x51, 0x37, 0x84, 0xec, 0x05, 0xf6, 0x78, 0xc1,
	0x89, 0xa6, 0x31, 0xe8, 0x85, 0xd9, 0x0b, 0x13, 0x0f, 0xb0, 0x1e, 0xb2, 0x7b, 0x0a, 0x19, 0x20,
	0x6b, 0xbc, 0x1b, 0x61, 0x3c, 0x36, 0xb4, 0x9d, 0xda, 0x4e, 0x5d, 0xfa, 0x1f, 0xfc, 0x13, 0x26,
	0xfe, 0x38, 0xaf, 0xbd, 0x37, 0x31, 0xf3, 0xd1, 0x52, 0x94, 0xbd, 0x9b, 0xe7, 0x7d, 0x9e, 0x99,
	0xf7, 0xb3, 0x6f, 0x61, 0x10, 0xc4, 0x19, 0x8b, 0xa3, 0x38, 0x20, 0x5e, 0x92, 0x32, 0xce, 0x90,
	0x25, 0xa0, 0xdb, 0x83, 0xee, 0x3a, 0x88, 0x9f, 0x30, 0xfd, 0x35, 0xa7, 0x19, 0x77, 0x6f, 0xa1,
	0xa3, 0x60, 0x12, 0x16, 0xe8, 0x05, 0xb4, 0x32, 0x4e, 0x78, 0x9e, 0x0d, 0x8d, 0xb1, 0x31, 0xe9,
	0x60, 0x8d, 0xdc, 0x31, 0xd8, 0xb3, 0xf5, 0x6e, 0x97, 0x91, 0x27, 0x8a, 0x3e, 0x86, 0x26, 0x67,
	0x9c, 0x84, 0x52, 0x62, 0x61, 0x05, 0xdc, 0x3b, 0xe8, 0x3e, 0xd2, 0x88, 0xa5, 0x85, 0x12, 0x8d,
	0xc0, 0x8e, 0xc8, 0x49, 0x9e, 0xb5, 0xae, 0xc2, 0xee, 0xdf, 0x06, 0x3c, 0xf7, 0x29, 0x7f, 0xcf,
	0xd2, 0xa3, 0x12, 0x0f, 0xa1, 0xcd, 0x4f, 0xf7, 0x05, 0xa7, 0x99, 0xd6, 0x96, 0x50, 0x30, 0xa9,
	0x66, 0x1a, 0x8a, 0xd1, 0x10, 0xbd, 0x84, 0x0e, 0x3f, 0xad, 0xc9, 0xfe, 0x48, 0x79, 0x36, 0x34,
	0x25, 0x77, 0x36, 0x08, 0x36, 0xad, 0x58, 0x4b, 0xb1, 0x95, 0x41, 0x04, 0xc7, 0x4f, 0x8b, 0x34,
	0x65, 0x69, 0x36, 0x6c, 0xaa, 0xe0, 0x4a, 0x2c, 0xb8, 0xb4, 0xe4, 0x5a, 0x8a, 0x2b, 0xb1, 0xf2,
	0x39, 0x4f, 0x59, 0x92, 0xd0, 0xc3, 0xb0, 0x5d, 0xfa, 0xd4, 0x06, 0xe5, 0xb3, 0x64, 0xed, 0xd2,
	0xa7, 0x36, 0xb8, 0x7f, 0x19, 0xd0, 0xc3, 0x34, 0x63, 0x79, 0xba, 0xa7, 0x2a, 0xeb, 0x31, 0x98,
	0xfb, 0x24, 0x97, 0x19, 0x77, 0xa7, 0x7d, 0x4f, 0xf4, 0xc6, 0x2b, 0x8b, 0x8c, 0x05, 0x85, 0xee,
	0xa0, 0x15, 0xc9, 0x9a, 0xca, 0xe4, 0xbb, 0xd3, 0x1b, 0x25, 0xaa, 0xd5, 0x19, 0x6b, 0x01, 0x7a,
	0x05, 0xed, 0x58, 0x95, 0x74, 0x68, 0x8e, 0xcd, 0x49, 0x77, 0x3a, 0x56, 0xda, 0x0b, 0x97, 0x9e,
	0xae, 0xfa, 0x22, 0xe6, 0x69, 0x81, 0xcb, 0x0b, 0x23, 0xbf, 0x6a, 0x87, 0x24, 0x90, 0x03, 0xe6,
	0x91, 0x16, 0x7a, 0x02, 0xc4, 0x11, 0x4d, 0xa0, 0xf9, 0x1b, 0x09, 0x73, 0xaa, 0xe3, 0x40, 0xea,
	0xed, 0x7a, 0x0f, 0xb1, 0x12, 0xbc, 0x6a, 0x7c, 0x63, 0xb8, 0xbf, 0x1b, 0xd0, 0x59, 0xc6, 0x3f,
	0x33, 0x35, 0x52, 0x5f, 0x42, 0x33, 0xd7, 0x63, 0x20, 0xe2, 0x1a, 0xa9, 0xbb, 0x15, 0xef, 0xc9,
	0xeb, 0x2a, 0x22, 0x25, 0x1c, 0x3d, 0x02, 0x9c, 0x8d, 0x57, 0xa2, 0xb9, 0xbb, 0x8c, 0xe6, 0xa3,
	0x2b, 0x99, 0xd6, 0xc3, 0xf9, 0x14, 0x06, 0x1b, 0xce, 0x92, 0x2d, 0xc9, 0x8e, 0x7a, 0xe6, 0x51,
	0x1f, 0x1a, 0xc1, 0x41, 0x3f, 0xd9, 0x08, 0x0e, 0xee, 0x00, 0x7a, 0x67, 0x49, 0x12, 0x16, 0xee,
	0x2d, 0xdc, 0x08, 0xb0, 0x91, 0xd3, 0xff, 0xa1, 0x5b, 0x7f, 0x18, 0x30, 0xa8, 0xab, 0x44, 0xb6,
	0x5f, 0x5f, 0x7c, 0x40, 0xfd, 0xe9, 0x4b, 0x15, 0xdc, 0x7f, 0x64, 0x9e, 0x3e, 0x97, 0x9f, 0xd7,
	0x0f, 0xd0, 0x52, 0x16, 0xd4, 0x85, 0xf6, 0xce, 0x7f, 0xe3, 0xaf, 0xde, 0xf9, 0xce, 0x33, 0xf4,
	0x1c, 0xec, 0xcd, 0x7a, 0xb5, 0x7a, 0xbb, 0xf4, 0xbf, 0x77, 0x0c, 0x85, 0xbe, 0x7b, 0xe7, 0x0b,
	0xd4, 0x10, 0x42, 0xbc, 0xf3, 0x25, 0x30, 0x05, 0xf5, 0x7a, 0xe9, 0x2f, 0x37, 0x0f, 0x8b, 0xb9,
	0x63, 0x21, 0x80, 0xd6, 0x3d, 0x5e, 0xbd, 0x59, 0xf8, 0x4e, 0xd3, 0xfd, 0xd3, 0x80, 0xbe, 0x7a,
	0xfa, 0x91, 0x24, 0x2a, 0xc4, 0x6f, 0xc1, 0x56, 0x6e, 0xe5, 0xe7, 0x26, 0x7a, 0xe2, 0xaa, 0x20,
	0x2f, 0x75, 0x1a, 0xd2, 0x4c, 0xf5, 0xa6, 0xba, 0x33, 0xc2, 0xa2, 0x58, 0x35, 0xea, 0x4a, 0x87,
	0x3e, 0xbf, 0xec, 0xd0, 0x27, 0x57, 0x8b, 0x50, 0xef, 0xd1, 0x03, 0xa0, 0x19, 0x8b, 0x39, 0x09,
	0x62, 0x9a, 0x96, 0x8d, 0xcc, 0xc4, 0x36, 0xd2, 0xf3, 0x2f, 0xde, 0x36, 0xab, 0x61, 0x1f, 0x81,
	0x1d, 0x93, 0x98, 0xcd, 0xd6, 0x3b, 0xb5, 0x16, 0x4c, 0x5c, 0x61, 0xf7, 0x47, 0x78, 0x51, 0x7f,
	0x89, 0x93, 0x94, 0xaf, 0x59, 0x18, 0xec, 0x0b, 0x84, 0xc0, 0x8a, 0x49, 0x44, 0x75, 0x9c, 0xf2,
	0x8c, 0xbe, 0x80, 0x9b, 0x88, 0x9c, 0x82, 0x28, 0x8f, 0x30, 0xe5, 0x69, 0x31, 0x63, 0x79, 0xcc,
	0xe5, 0x93, 0x3d, 0xfc, 0x7f, 0xc2, 0xfd, 0x47, 0x37, 0xfc, 0x2d, 0x7b, 0xaa, 0x86, 0xc2, 0x03,
	0x8b, 0x17, 0x09, 0xd5, 0xed, 0x1e, 0x9d, 0x33, 0xad, 0x89, 0xbc, 0x6d, 0x91, 0x50, 0x2c, 0x75,
	0x7a, 0x88, 0x1a, 0xe5, 0x10, 0x89, 0x6d, 0x9a, 0x05, 0xf1, 0x9e, 0xca, 0x1d, 0xd6, 0xc1, 0x0a,
	0xa0, 0xcf, 0xa0, 0x47, 0x0e, 0x87, 0x6d, 0x10, 0x89, 0x0c, 0xa2, 0x44, 0xed, 0x30, 0x1b, 0x5f,
	0x1a, 0x45, 0x7d, 0x5e, 0xb3, 0x30, 0x64, 0xef, 0xe5, 0x16, 0xb3, 0xb1, 0x46, 0x22, 0xd3, 0x2d,
	0x09, 0x42, 0xb9, 0xbf, 0x3a, 0x58, 0x9e, 0xc5, 0x26, 0x9d, 0x53, 0x4e, 0x82, 0x30, 0x93, 0x9b,
	0xcb, 0xc6, 0x25, 0x74, 0x27, 0x60, 0x89, 0xf8, 0xc4, 0xd8, 0x6c, 0xb6, 0xf3, 0xd5, 0x6e, 0xeb,
	0x3c, 0xd3, 0xe7, 0x05, 0xc6, 0x8e, 0x81, 0x6c, 0xb0, 0xee, 0x57, 0xdb, 0x07, 0xa7, 0xe1, 0xde,
	0x42, 0xaf, 0xcc, 0x6c, 0xf6, 0x4b, 0x1e, 0x1f, 0x85, 0xa3, 0x03, 0xe1, 0x44, 0xa7, 0x23, 0xcf,
	0x3f, 0xb5, 0xe4, 0xbf, 0xe6, 0xab, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xb5, 0x02, 0x6c,
	0x7e, 0x06, 0x00, 0x00,
}
